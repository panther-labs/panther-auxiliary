# Copyright (C) 2022 Panther Labs, Inc.
#
# The Panther SaaS is licensed under the terms of the Panther Enterprise Subscription
# Agreement available at https://panther.com/enterprise-subscription-agreement/.
# All intellectual property rights in and to the Panther SaaS, including any and all
# rights to access the Panther SaaS, are governed by the Panther Enterprise Subscription Agreement.

terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 5.0"
    }
  }
}

locals {
  identity_account_specified = var.identity_account_id != ""
  ops_account_specified      = var.ops_account_id != ""
  role_name_specified        = var.deployment_role_name != ""
  internal_deploy_specified  = var.internal_deploy == "true"
}

variable "deployment_role_name" {
  type        = string
  description = "Name of the deployment IAM role. If an empty string, the name will be autogenerated"
  default     = "PantherDeploymentRole"
}

variable "identity_account_id" {
  type        = string
  description = "The account ID for the account the deployment role will be assumed from"
  default     = ""
}

variable "ops_account_id" {
  type        = string
  description = "The second account ID for the account the deployment role will be assumed from.  Used with new deployment tooling"
  default     = ""
}

variable "internal_deploy" {
  type        = string
  description = "Is set to true when built locally through mage. Used to make the policy names regional."
  default     = "false"
}

data "aws_caller_identity" "current" {}
data "aws_partition" "current" {}
data "aws_region" "current" {}

resource "aws_iam_role" "deployment_role" {
  name        = local.role_name_specified ? var.deployment_role_name : null
  description = "IAM role for deploying Panther"
  assume_role_policy = jsonencode({
    "Version" : "2012-10-17",
    "Statement" : concat([
      {
        "Effect" : "Allow",
        "Principal" : {
          "AWS" : local.identity_account_specified ? "arn:${data.aws_partition.current.partition}:iam::${var.identity_account_id}:root" : "arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:root"
        },
        "Action" : ["sts:AssumeRole"],
        "Condition" : {
          "Bool" : {
            "aws:SecureTransport" : "true"
          }
        }
      },
      {
        "Effect" : "Allow",
        "Principal" : {
          "Service" : "cloudformation.amazonaws.com"
        },
        "Action" : ["sts:AssumeRole"],
        "Condition" : {
          "Bool" : {
            "aws:SecureTransport" : "true"
          }
        }
      }
      ], local.ops_account_specified ? [{
        "Effect" : "Allow",
        "Principal" : {
          "AWS" : "arn:${data.aws_partition.current.partition}:iam::${var.ops_account_id}:role/PulumiCodeBuild"
        },
        "Action" : ["sts:AssumeRole"],
        "Condition" : {
          "Bool" : {
            "aws:SecureTransport" : "true"
          }
        }
    }] : [])
  })

  tags = {
    "panther:app" = "panther"
  }
}

resource "aws_iam_role_policy_attachment" "deployment_role_readonly" {
  role       = aws_iam_role.deployment_role.name
  policy_arn = "arn:aws:iam::aws:policy/ReadOnlyAccess"
}

resource "aws_iam_role_policy" "deployment_policy" {
  name = "PantherInfraManagementPolicy"
  role = aws_iam_role.deployment_role.name
  policy = jsonencode({
    "Version" : "2012-10-17",
    "Statement" : [
      {
        "Sid" : "AWSRequiredStarCalls",
        "Effect" : "Allow",
        "Action" : [
          "cloudfront:UpdateDistribution",
          "ecs:CreateCluster",
          "ecs:DeregisterTaskDefinition",
          "kms:CreateKey",
          "kms:TagResource",
          "logs:CreateLogDelivery",
          "s3:PutAccountPublicAccessBlock",
          "s3:PutPublicAccessBlock",
          "servicequotas:RequestServiceQuotaIncrease",
          "tag:TagResources"
        ],
        "Resource" : "*"
      },
      {
        "Sid" : "AWSRequiredKMSAuthor",
        "Effect" : "Allow",
        "Action" : ["kms:*"],
        "Resource" : "*"
      },
      {
        "Sid" : "PantherCloudformation",
        "Effect" : "Allow",
        "Action" : [
          "cloudformation:CreateChangeSet",
          "cloudformation:CreateStack",
          "cloudformation:DeleteChangeSet",
          "cloudformation:DeleteStack",
          "cloudformation:DescribeStacks",
          "cloudformation:ExecuteChangeSet",
          "cloudformation:ListStackResources",
          "cloudformation:UpdateStack"
        ],
        "Resource" : [
          "arn:${data.aws_partition.current.partition}:cloudformation:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:stack/panther*",
          "arn:${data.aws_partition.current.partition}:cloudformation:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:stack/onboard-*",
          "arn:${data.aws_partition.current.partition}:cloudformation:${data.aws_region.current.name}:aws:transform/Serverless*",
          "arn:${data.aws_partition.current.partition}:cloudformation:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:stack/onboard-log-processing-role-*",
          "arn:${data.aws_partition.current.partition}:cloudformation:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:stack/onboard-real-time-events-*",
          "arn:${data.aws_partition.current.partition}:cloudformation:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:stack/onboard-compliance-roles-*"
        ]
      },
      {
        "Sid" : "PantherCleanupNetworkInterfaces",
        "Effect" : "Allow",
        "Action" : ["ec2:DeleteNetworkInterface"],
        "Resource" : "*"
      },
      {
        "Sid" : "PantherEC2Create",
        "Effect" : "Allow",
        "Action" : [
          "ec2:AllocateAddress",
          "ec2:CreateFlowLogs",
          "ec2:CreateInternetGateway",
          "ec2:CreateNatGateway",
          "ec2:CreateRouteTable",
          "ec2:CreateSecurityGroup",
          "ec2:CreateSubnet",
          "ec2:CreateTags",
          "ec2:CreateVpc",
          "ec2:CreateVpcEndpoint",
          "ec2:RevokeSecurityGroupIngress"
        ],
        "Resource" : [
          "arn:${data.aws_partition.current.partition}:ec2:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:elastic-ip/*",
          "arn:${data.aws_partition.current.partition}:ec2:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:internet-gateway/*",
          "arn:${data.aws_partition.current.partition}:ec2:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:natgateway/*",
          "arn:${data.aws_partition.current.partition}:ec2:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:route-table/*",
          "arn:${data.aws_partition.current.partition}:ec2:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:security-group/*",
          "arn:${data.aws_partition.current.partition}:ec2:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:subnet/*",
          "arn:${data.aws_partition.current.partition}:ec2:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:vpc-endpoint/*",
          "arn:${data.aws_partition.current.partition}:ec2:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:vpc-flow-log/*",
          "arn:${data.aws_partition.current.partition}:ec2:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:vpc/*"
        ]
      },
      {
        "Sid" : "PantherEC2VPC",
        "Effect" : "Allow",
        "Action" : [
          "ec2:AssociateRouteTable",
          "ec2:AssociateVpcCidrBlock",
          "ec2:AttachInternetGateway",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:CreateRoute",
          "ec2:DeleteFlowLogs",
          "ec2:DeleteInternetGateway",
          "ec2:DeleteNatGateway",
          "ec2:DeleteRoute",
          "ec2:DeleteRouteTable",
          "ec2:DeleteSecurityGroup",
          "ec2:DeleteSubnet",
          "ec2:DeleteTags",
          "ec2:DeleteVpcEndpoints",
          "ec2:DisassociateRouteTable",
          "ec2:DisassociateVpcCidrBlock",
          "ec2:ModifySubnetAttribute",
          "ec2:ModifyVpcAttribute",
          "ec2:ModifyVpcEndpoint",
          "ec2:ReleaseAddress",
          "ec2:RevokeSecurityGroupEgress"
        ],
        "Resource" : [
          "arn:${data.aws_partition.current.partition}:ec2:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:elastic-ip/*",
          "arn:${data.aws_partition.current.partition}:ec2:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:internet-gateway/*",
          "arn:${data.aws_partition.current.partition}:ec2:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:natgateway/*",
          "arn:${data.aws_partition.current.partition}:ec2:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:route-table/*",
          "arn:${data.aws_partition.current.partition}:ec2:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:security-group/*",
          "arn:${data.aws_partition.current.partition}:ec2:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:subnet/*",
          "arn:${data.aws_partition.current.partition}:ec2:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:vpc-endpoint/*",
          "arn:${data.aws_partition.current.partition}:ec2:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:vpc-flow-log/*",
          "arn:${data.aws_partition.current.partition}:ec2:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:vpc/*"
        ],
        "Condition" : {
          "StringEquals" : {
            "aws:ResourceTag/panther:app" : "panther"
          }
        }
      },
      {
        "Sid" : "PantherALB",
        "Effect" : "Allow",
        "Action" : [
          "elasticloadbalancing:AddTags",
          "elasticloadbalancing:CreateListener",
          "elasticloadbalancing:CreateLoadBalancer",
          "elasticloadbalancing:CreateRule",
          "elasticloadbalancing:CreateTargetGroup",
          "elasticloadbalancing:ModifyLoadBalancerAttributes",
          "elasticloadbalancing:ModifyListener",
          "elasticloadbalancing:ModifyListenerAttributes",
          "elasticloadbalancing:ModifyTargetGroupAttributes",
          "elasticloadbalancing:RegisterTargets",
          "elasticloadbalancing:RemoveTags"
        ],
        "Resource" : [
          "arn:${data.aws_partition.current.partition}:elasticloadbalancing:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:listener-rule/app/web/*",
          "arn:${data.aws_partition.current.partition}:elasticloadbalancing:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:listener/app/http-ingest-alb/*",
          "arn:${data.aws_partition.current.partition}:elasticloadbalancing:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:listener/app/web/*",
          "arn:${data.aws_partition.current.partition}:elasticloadbalancing:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:loadbalancer/app/http-ingest-alb/*",
          "arn:${data.aws_partition.current.partition}:elasticloadbalancing:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:loadbalancer/app/web/*",
          "arn:${data.aws_partition.current.partition}:elasticloadbalancing:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:targetgroup/panther-http-ingest-target-group/*",
          "arn:${data.aws_partition.current.partition}:elasticloadbalancing:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:targetgroup/panther-web/*"
        ]
      },
      {
        "Sid" : "PantherCodebuild",
        "Effect" : "Allow",
        "Action" : [
          "codebuild:BatchGetBuilds",
          "codebuild:BatchGetProjects",
          "codebuild:CreateProject",
          "codebuild:DeleteProject",
          "codebuild:UpdateProject",
          "codebuild:StartBuild",
          "codebuild:RetryBuild"
        ],
        "Resource" : "arn:${data.aws_partition.current.partition}:codebuild:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:project/panther*"
      },
      {
        "Sid" : "PantherRedshiftProvisioningServiceLinkedRole",
        "Effect" : "Allow",
        "Action" : ["iam:CreateServiceLinkedRole"],
        "Resource" : "arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:role/aws-service-role/redshift.amazonaws.com/AWSServiceRoleForRedshift"
      },
      {
        "Sid" : "PantherRedshiftProvisioning",
        "Effect" : "Allow",
        "Action" : [
          "redshift-data:ExecuteStatement",
          "redshift-serverless:CreateNamespace",
          "redshift-serverless:CreateWorkgroup",
          "redshift-serverless:DeleteNamespace",
          "redshift-serverless:DeleteWorkgroup",
          "redshift-serverless:GetCredentials",
          "redshift-serverless:UpdateNamespace",
          "redshift-serverless:UpdateWorkgroup",
          "redshift-serverless:UntagResource",
          "redshift-serverless:TagResource"
        ],
        "Resource" : [
          "arn:${data.aws_partition.current.partition}:redshift-serverless:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:namespace/*",
          "arn:${data.aws_partition.current.partition}:redshift-serverless:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:workgroup/*"
        ]
      },
      {
        "Sid" : "PantherRedshiftProvisioningDescribeStatement",
        "Effect" : "Allow",
        "Action" : ["redshift-data:DescribeStatement"],
        "Resource" : "*"
      },
      {
        "Sid" : "PantherStateMachine",
        "Effect" : "Allow",
        "Action" : [
          "states:CreateStateMachine",
          "states:DeleteStateMachine",
          "states:TagResource",
          "states:UntagResource",
          "states:UpdateStateMachine"
        ],
        "Resource" : "arn:${data.aws_partition.current.partition}:states:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:stateMachine:panther*"
      },
      {
        "Sid" : "PantherEvents",
        "Effect" : "Allow",
        "Action" : [
          "events:DeleteRule",
          "events:PutRule",
          "events:PutTargets",
          "events:RemoveTargets",
          "events:TagResource",
          "events:UntagResource"
        ],
        "Resource" : [
          "arn:${data.aws_partition.current.partition}:events:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:rule/alert-search-rehydrate-api-rehydration-cron",
          "arn:${data.aws_partition.current.partition}:events:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:rule/analysis-api-schedule-polling-cron",
          "arn:${data.aws_partition.current.partition}:events:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:rule/compliance-aggregator-refresh-all-delete-cron",
          "arn:${data.aws_partition.current.partition}:events:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:rule/compliance-aggregator-refresh-all-no-delete-cron",
          "arn:${data.aws_partition.current.partition}:events:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:rule/detection-processor-poll-cron",
          "arn:${data.aws_partition.current.partition}:events:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:rule/enrichment-api-prune-generations-cron",
          "arn:${data.aws_partition.current.partition}:events:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:rule/enrichment-api-sync-all-profile-pullers-cron",
          "arn:${data.aws_partition.current.partition}:events:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:rule/holding-tank-field-discovery-cron",
          "arn:${data.aws_partition.current.partition}:events:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:rule/lambda-warmer-prewarm-cron",
          "arn:${data.aws_partition.current.partition}:events:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:rule/ops-tools-*-cron",
          "arn:${data.aws_partition.current.partition}:events:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:rule/panther*",
          "arn:${data.aws_partition.current.partition}:events:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:rule/pulumi-api-cleanup-cron",
          "arn:${data.aws_partition.current.partition}:events:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:rule/replay-api-schedule-cleanup-cron",
          "arn:${data.aws_partition.current.partition}:events:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:rule/source-api-refresh-sources-health-cron",
          "arn:${data.aws_partition.current.partition}:events:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:rule/system-status-monitor-ingestion-threshold-cron",
          "arn:${data.aws_partition.current.partition}:events:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:rule/system-status-publish-sources-last-received-event-cron",
          "arn:${data.aws_partition.current.partition}:events:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:rule/system-status-publish-sources-permission-status-cron",
          "arn:${data.aws_partition.current.partition}:events:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:rule/system-status-refresh-log-type-metrics-cron",
          "arn:${data.aws_partition.current.partition}:events:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:rule/onboard-real-time-events*",
          "arn:${data.aws_partition.current.partition}:events:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:rule/users-api-deactivate-support-users-cron",
          "arn:${data.aws_partition.current.partition}:events:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:rule/onboard-real-time-events-*"
        ]
      },
      {
        "Sid" : "PantherAPIGateway",
        "Effect" : "Allow",
        "Action" : [
          "apigateway:DELETE",
          "apigateway:PATCH",
          "apigateway:POST",
          "apigateway:PUT",
          "apigateway:TagResource",
          "apigateway:UntagResource"
        ],
        "Resource" : [
          "arn:${data.aws_partition.current.partition}:apigateway:${data.aws_region.current.name}::/account",
          "arn:${data.aws_partition.current.partition}:apigateway:${data.aws_region.current.name}::/apis*",
          "arn:${data.aws_partition.current.partition}:apigateway:${data.aws_region.current.name}::/domainnames*",
          "arn:${data.aws_partition.current.partition}:apigateway:${data.aws_region.current.name}::/restapis*",
          "arn:${data.aws_partition.current.partition}:apigateway:${data.aws_region.current.name}::/tags/*",
          "arn:${data.aws_partition.current.partition}:apigateway:${data.aws_region.current.name}::/usageplans*"
        ],
        "Condition" : {
          "StringLikeIfExists" : {
            "apigateway:Request/apiName" : "panther*"
          }
        }
      }
    ]
  })
}

resource "aws_iam_policy" "deployment_policy_2" {
  name = local.internal_deploy_specified ? "PantherInfraManagementPolicy2-${data.aws_region.current.name}" : "PantherInfraManagementPolicy2"
  policy = jsonencode({
    "Version" : "2012-10-17",
    "Statement" : [
      {
        "Sid" : "PantherS3",
        "Effect" : "Allow",
        "Action" : [
          "s3:CreateBucket",
          "s3:DeleteBucketPolicy",
          "s3:PutBucketAcl",
          "s3:PutBucketCors",
          "s3:PutBucketLogging",
          "s3:PutBucketNotification",
          "s3:PutBucketOwnershipControls",
          "s3:PutBucketPolicy",
          "s3:PutBucketPublicAccessBlock",
          "s3:PutBucketTagging",
          "s3:PutBucketVersioning",
          "s3:PutEncryptionConfiguration",
          "s3:PutInventoryConfiguration",
          "s3:PutLifecycleConfiguration",
          "s3:PutMetricsConfiguration"
        ],
        "Resource" : [
          "arn:${data.aws_partition.current.partition}:s3:::analysis-bulk-uploads-*",
          "arn:${data.aws_partition.current.partition}:s3:::analysis-versions-*",
          "arn:${data.aws_partition.current.partition}:s3:::audit-logs-*",
          "arn:${data.aws_partition.current.partition}:s3:::dashboards-*",
          "arn:${data.aws_partition.current.partition}:s3:::data-archive-*",
          "arn:${data.aws_partition.current.partition}:s3:::datadog-aws-metric-stream-backup-*",
          "arn:${data.aws_partition.current.partition}:s3:::datalake-*",
          "arn:${data.aws_partition.current.partition}:s3:::input-data-*",
          "arn:${data.aws_partition.current.partition}:s3:::panther-*",
          "arn:${data.aws_partition.current.partition}:s3:::panther-audit-logs-*",
          "arn:${data.aws_partition.current.partition}:s3:::processed-data-*",
          "arn:${data.aws_partition.current.partition}:s3:::pulumi-state-*",
          "arn:${data.aws_partition.current.partition}:s3:::replay-data-*",
          "arn:${data.aws_partition.current.partition}:s3:::readiness-*",
          "arn:${data.aws_partition.current.partition}:s3:::temporary-processed-data-*",
          "arn:${data.aws_partition.current.partition}:s3:::unmonitored-audit-logs-*",
          "arn:${data.aws_partition.current.partition}:s3:::user-uploads-*"
        ]
      },
      {
        "Sid" : "PantherS3PulumiStateBucketRemoverTemp",
        "Effect" : "Allow",
        "Action" : ["s3:DeleteBucket"],
        "Resource" : ["arn:${data.aws_partition.current.partition}:s3:::pulumi-state-*"]
      },
      {
        "Sid" : "PantherS3DevDeployment",
        "Effect" : "Allow",
        "Action" : ["s3:PutObject"],
        "Resource" : ["arn:${data.aws_partition.current.partition}:s3:::panther-dev-sourcebucket-*"]
      },
      {
        "Sid" : "PantherS3Deployment",
        "Effect" : "Allow",
        "Action" : ["s3:GetObject"],
        "Resource" : [
          "arn:${data.aws_partition.current.partition}:s3:::panther-enterprise*",
          "arn:${data.aws_partition.current.partition}:s3:::panther-internal-test*"
        ]
      },
      {
        "Sid" : "PantherFirehose",
        "Effect" : "Allow",
        "Action" : [
          "firehose:CreateDeliveryStream",
          "firehose:UpdateDestination",
          "firehose:DeleteDeliveryStream",
          "firehose:StartDeliveryStreamEncryption",
          "firehose:TagDeliveryStream",
          "firehose:UntagDeliveryStream",
          "firehose:UpdateDestination"
        ],
        "Resource" : "arn:aws:firehose:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:deliverystream/panther-*"
      },
      {
        "Sid" : "PantherLambda",
        "Effect" : "Allow",
        "Action" : [
          "lambda:AddPermission",
          "lambda:CreateFunction",
          "lambda:DeleteFunction",
          "lambda:DeleteFunctionConcurrency",
          "lambda:DeleteFunctionEventInvokeConfig",
          "lambda:DeleteLayerVersion",
          "lambda:InvokeFunction",
          "lambda:PublishLayerVersion",
          "lambda:PutFunctionConcurrency",
          "lambda:PutFunctionEventInvokeConfig",
          "lambda:PutFunctionRecursionConfig",
          "lambda:RemovePermission",
          "lambda:TagResource",
          "lambda:UntagResource",
          "lambda:UpdateFunctionCode",
          "lambda:UpdateFunctionConfiguration"
        ],
        "Resource" : [
          "arn:${data.aws_partition.current.partition}:lambda:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:function:datadog-*",
          "arn:${data.aws_partition.current.partition}:lambda:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:function:panther*",
          "arn:${data.aws_partition.current.partition}:lambda:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:layer:panther*"
        ]
      },
      {
        "Sid" : "PantherLambdaSourceMapping",
        "Effect" : "Allow",
        "Action" : [
          "lambda:CreateEventSourceMapping",
          "lambda:DeleteEventSourceMapping",
          "lambda:UpdateEventSourceMapping"
        ],
        "Resource" : "*",
        "Condition" : {
          "StringLike" : {
            "lambda:FunctionArn" : "arn:${data.aws_partition.current.partition}:lambda:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:function:panther*"
          }
        }
      },
      {
        "Sid" : "PantherSNS",
        "Effect" : "Allow",
        "Action" : [
          "sns:CreateTopic",
          "sns:DeleteTopic",
          "sns:SetTopicAttributes",
          "sns:Subscribe",
          "sns:TagResource",
          "sns:Unsubscribe",
          "sns:UntagResource"
        ],
        "Resource" : "arn:${data.aws_partition.current.partition}:sns:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:panther*"
      },
      {
        "Sid" : "PantherSQS",
        "Effect" : "Allow",
        "Action" : [
          "sqs:CreateQueue",
          "sqs:DeleteQueue",
          "sqs:SetQueueAttributes",
          "sqs:TagQueue",
          "sqs:UntagQueue"
        ],
        "Resource" : "arn:${data.aws_partition.current.partition}:sqs:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:panther*"
      },
      {
        "Sid" : "PantherDynamoDB",
        "Effect" : "Allow",
        "Action" : [
          "dynamodb:CreateTable",
          "dynamodb:DeleteTable",
          "dynamodb:UpdateTable",
          "dynamodb:DeleteItem",
          "dynamodb:TagResource",
          "dynamodb:UntagResource",
          "dynamodb:Update*"
        ],
        "Resource" : "arn:${data.aws_partition.current.partition}:dynamodb:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:table/panther*"
      },
      {
        "Sid" : "PantherECR",
        "Effect" : "Allow",
        "Action" : [
          "ecr:BatchCheckLayerAvailability",
          "ecr:CompleteLayerUpload",
          "ecr:InitiateLayerUpload",
          "ecr:PutImage",
          "ecr:SetRepositoryPolicy",
          "ecr:UploadLayerPart",
          "ecr:BatchGetImage"
        ],
        "Resource" : "arn:${data.aws_partition.current.partition}:ecr:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:repository/panther*"
      },
      {
        "Sid" : "PantherECRAdditional",
        "Effect" : "Allow",
        "Action" : ["ecr:GetAuthorizationToken"],
        "Resource" : "*"
      },
      {
        "Sid" : "PantherAssumeRoute53",
        "Effect" : "Allow",
        "Action" : ["sts:AssumeRole"],
        "Resource" : "arn:aws:iam::*:role/PulumiRoute53"
      }
    ]
  })
}

resource "aws_iam_role_policy_attachment" "deployment_policy_2" {
  role       = aws_iam_role.deployment_role.name
  policy_arn = aws_iam_policy.deployment_policy_2.arn
}

resource "aws_iam_policy" "deployment_policy_3" {
  name = local.internal_deploy_specified ? "PantherInfraManagementPolicy3-${data.aws_region.current.name}" : "PantherInfraManagementPolicy3"
  policy = jsonencode({
    "Version" : "2012-10-17",
    "Statement" : [
      {
        "Sid" : "PantherKMS",
        "Effect" : "Allow",
        "Action" : [
          "kms:CreateGrant",
          "kms:Decrypt",
          "kms:EnableKeyRotation",
          "kms:Encrypt",
          "kms:GenerateDataKey",
          "kms:GenerateDataKeyWithoutPlaintext",
          "kms:UpdateAlias"
        ],
        "Resource" : "arn:${data.aws_partition.current.partition}:kms:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:key/panther*"
      },
      {
        "Sid" : "DevPulumiOktaSupport",
        "Effect" : "Allow",
        "Action" : ["kms:Decrypt"],
        "Resource" : "arn:aws:kms:us-west-2:246537256134:key/bc6a94a9-56a1-41b7-83aa-fddeb4df255e"
      },
      {
        "Sid" : "PulumiOktaSecret",
        "Effect" : "Allow",
        "Action" : ["secretsmanager:GetSecretValue"],
        "Resource" : "arn:aws:secretsmanager:us-west-2:246537256134:secret:pulumi/okta-epd-login-app-management-token-05Mnkv"
      },
      {
        "Sid" : "PantherManageSecrets",
        "Effect" : "Allow",
        "Action" : [
          "secretsmanager:CancelRotateSecret",
          "secretsmanager:CreateSecret",
          "secretsmanager:DeleteSecret",
          "secretsmanager:GetSecretValue",
          "secretsmanager:PutSecretValue",
          "secretsmanager:RotateSecret",
          "secretsmanager:TagResource",
          "secretsmanager:UpdateSecret"
        ],
        "Resource" : "arn:${data.aws_partition.current.partition}:secretsmanager:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:secret:panther*"
      },
      {
        "Sid" : "PantherLogs",
        "Effect" : "Allow",
        "Action" : [
          "logs:CreateLogGroup",
          "logs:DeleteLogGroup",
          "logs:PutRetentionPolicy",
          "logs:PutSubscriptionFilter",
          "logs:DeleteSubscriptionFilter",
          "logs:TagLogGroup",
          "logs:TagResource",
          "logs:UntagLogGroup"
        ],
        "Resource" : [
          "arn:${data.aws_partition.current.partition}:logs:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:log-group:/aws/apigateway/welcome*",
          "arn:${data.aws_partition.current.partition}:logs:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:log-group:/aws/batch/job*",
          "arn:${data.aws_partition.current.partition}:logs:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:log-group:/aws/codebuild/panther*",
          "arn:${data.aws_partition.current.partition}:logs:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:log-group:/aws/gateway/panther*",
          "arn:${data.aws_partition.current.partition}:logs:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:log-group:/aws/lambda-insights*",
          "arn:${data.aws_partition.current.partition}:logs:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:log-group:/aws/lambda/datadog-log-forwarder*",
          "arn:${data.aws_partition.current.partition}:logs:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:log-group:/aws/lambda/panther*",
          "arn:${data.aws_partition.current.partition}:logs:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:log-group:panther-*",
          "arn:${data.aws_partition.current.partition}:logs:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:log-group:alert-open-search*"
        ]
      },
      {
        "Sid" : "PantherCognito",
        "Effect" : "Allow",
        "Action" : [
          "cognito-idp:CreateUserPool",
          "cognito-idp:TagResource"
        ],
        "Resource" : "arn:${data.aws_partition.current.partition}:cognito-idp:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:userpool/*"
      },
      {
        "Sid" : "PantherCognitoManagement",
        "Effect" : "Allow",
        "Action" : [
          "cognito-idp:CreateIdentityProvider",
          "cognito-idp:CreateUserPoolClient",
          "cognito-idp:CreateUserPoolDomain",
          "cognito-idp:DeleteIdentityProvider",
          "cognito-idp:SetUserPoolMfaConfig",
          "cognito-idp:UntagResource",
          "cognito-idp:UpdateIdentityProvider",
          "cognito-idp:UpdateUserPool",
          "cognito-idp:UpdateUserPoolClient"
        ],
        "Resource" : "arn:${data.aws_partition.current.partition}:cognito-idp:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:userpool/*",
        "Condition" : {
          "StringEquals" : {
            "aws:ResourceTag/panther:app" : "panther"
          }
        }
      },
      {
        "Sid" : "PantherEFSCreate",
        "Effect" : "Allow",
        "Action" : [
          "elasticfilesystem:CreateFileSystem",
          "elasticfilesystem:TagResource"
        ],
        "Resource" : "arn:${data.aws_partition.current.partition}:elasticfilesystem:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:file-system/*"
      },
      {
        "Sid" : "PantherEFSManage",
        "Effect" : "Allow",
        "Action" : [
          "elasticfilesystem:CreateAccessPoint",
          "elasticfilesystem:CreateMountTarget",
          "elasticfilesystem:DeleteAccessPoint",
          "elasticfilesystem:DeleteFileSystem",
          "elasticfilesystem:DeleteMountTarget",
          "elasticfilesystem:PutLifecycleConfiguration",
          "elasticfilesystem:TagResource",
          "elasticfilesystem:UntagResource"
        ],
        "Resource" : [
          "arn:${data.aws_partition.current.partition}:elasticfilesystem:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:file-system/*",
          "arn:${data.aws_partition.current.partition}:elasticfilesystem:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:access-point/*"
        ]
      },
      {
        "Sid" : "PantherBatch",
        "Effect" : "Allow",
        "Action" : [
          "batch:CreateComputeEnvironment",
          "batch:CreateJobQueue",
          "batch:DeleteComputeEnvironment",
          "batch:DeleteJobQueue",
          "batch:DeregisterJobDefinition",
          "batch:RegisterJobDefinition",
          "batch:TagResource",
          "batch:UntagResource",
          "batch:UpdateComputeEnvironment",
          "batch:UpdateJobQueue"
        ],
        "Resource" : [
          "arn:${data.aws_partition.current.partition}:batch:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:compute-environment/panther*",
          "arn:${data.aws_partition.current.partition}:batch:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:job-definition/panther*",
          "arn:${data.aws_partition.current.partition}:batch:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:job-queue/panther*"
        ]
      },
      {
        "Sid" : "PantherECSManage",
        "Effect" : "Allow",
        "Action" : [
          "ecs:CreateService",
          "ecs:DeleteCluster",
          "ecs:DeleteService",
          "ecs:RegisterTaskDefinition",
          "ecs:TagResource",
          "ecs:UntagResource",
          "ecs:UpdateCluster",
          "ecs:UpdateClusterSettings",
          "ecs:UpdateService"
        ],
        "Resource" : [
          "arn:${data.aws_partition.current.partition}:ecs:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:cluster/panther*",
          "arn:${data.aws_partition.current.partition}:ecs:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:service/panther-*",
          "arn:${data.aws_partition.current.partition}:ecs:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:task-definition/panther-*"
        ]
      },
      {
        "Sid" : "PantherCWDashboard",
        "Effect" : "Allow",
        "Action" : ["cloudwatch:PutDashboard"],
        "Resource" : "arn:${data.aws_partition.current.partition}:cloudwatch::${data.aws_caller_identity.current.account_id}:dashboard/Panther*"
      },
      {
        "Sid" : "PantherUpdateSnowPipeCluster",
        "Effect" : "Allow",
        "Action" : ["iam:UpdateAssumeRolePolicy"],
        "Resource" : ["arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:role/panther-snowflake-logprocessing-role-${data.aws_region.current.name}"]
      }
    ]
  })
}

resource "aws_iam_role_policy_attachment" "deployment_policy_3" {
  role       = aws_iam_role.deployment_role.name
  policy_arn = aws_iam_policy.deployment_policy_3.arn
}

resource "aws_iam_policy" "deployment_policy_4" {
  name = local.internal_deploy_specified ? "PantherInfraManagementDenies-${data.aws_region.current.name}" : "PantherInfraManagementDenies"
  policy = jsonencode({
    "Version" : "2012-10-17",
    "Statement" : [
      {
        "Effect" : "Deny",
        "Action" : ["elasticloadbalancing:DeleteLoadBalancer"],
        "NotResource" : ["arn:${data.aws_partition.current.partition}:elasticloadbalancing:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:loadbalancer/app/http-ingest-alb*"]
      },
      {
        "Effect" : "Deny",
        "Action" : ["dynamodb:DeleteTable"],
        "NotResource" : ["arn:${data.aws_partition.current.partition}:dynamodb:*:${data.aws_caller_identity.current.account_id}:table/panther*"]
      },
      {
        "Effect" : "Deny",
        "Action" : ["s3:DeleteBucket"],
        "NotResource" : ["arn:${data.aws_partition.current.partition}:s3:::pulumi-state-*"]
      },
      {
        "Effect" : "Deny",
        "Action" : [
          "cognito-idp:DeleteUserPool*",
          "dynamodb:DeleteBackup",
          "dynamodb:DeleteTableReplica"
        ],
        "Resource" : "*"
      },
      {
        "Sid" : "PantherIAM",
        "Effect" : "Allow",
        "Action" : [
          "iam:AttachRolePolicy",
          "iam:CreatePolicy",
          "iam:CreatePolicyVersion",
          "iam:CreateRole",
          "iam:CreateServiceLinkedRole",
          "iam:DeletePolicy",
          "iam:DeletePolicyVersion",
          "iam:DeleteRole",
          "iam:DeleteRolePolicy",
          "iam:DetachRolePolicy",
          "iam:DeleteServerCertificate",
          "iam:PassRole",
          "iam:PutRolePolicy",
          "iam:TagPolicy",
          "iam:TagRole",
          "iam:TagServerCertificate",
          "iam:UpdateRole",
          "iam:UpdateAssumeRolePolicy",
          "iam:UploadServerCertificate",
          "iam:UntagRole",
          "iam:UntagPolicy"
        ],
        "Resource" : [
          "arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:instance-profile/Panther*",
          "arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:policy/analytics-*",
          "arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:policy/data-*",
          "arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:policy/datadog-*",
          "arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:policy/deny-data-access-*",
          "arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:policy/dynamo-scaling-*",
          "arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:policy/firehose-*",
          "arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:policy/panther*",
          "arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:policy/Panther*",
          "arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:policy/read-*",
          "arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:policy/support-*",
          "arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:policy/write-to-firehose-*",
          "arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:role/aws-service-role/batch.amazonaws.com/AWSServiceRoleForBatch",
          "arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:role/aws-service-role/cloudtrail.amazonaws.com/AWSServiceRoleForCloudTrail",
          "arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
          "arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:role/aws-service-role/ecs.amazonaws.com/AWSServiceRoleForECS",
          "arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:role/aws-service-role/elasticfilesystem.amazonaws.com/AWSServiceRoleForAmazonElasticFileSystem",
          "arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:role/aws-service-role/elasticloadbalancing.amazonaws.com/AWSServiceRoleForElasticLoadBalancing",
          "arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:role/aws-service-role/guardduty.amazonaws.com/AWSServiceRoleForAmazonGuardDuty",
          "arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:role/aws-service-role/opensearchservice.amazonaws.com/AWSServiceRoleForAmazonOpenSearchService",
          "arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:role/aws-service-role/ops.apigateway.amazonaws.com/AWSServiceRoleForAPIGateway",
          "arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:role/aws-service-role/servicequotas.amazonaws.com/AWSServiceRoleForServiceQuotas",
          "arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:role/Datadog*",
          "arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:role/datadog*",
          "arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:role/dynamo-scaling-*",
          "arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:role/firehose-http-input-data-bucket-*",
          "arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:role/panther*",
          "arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:role/Panther*",
          "arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:role/pip-layer-builder-codebuild-*",
          "arn:${data.aws_partition.current.partition}:iam::${data.aws_caller_identity.current.account_id}:server-certificate/panther/*"
        ]
      },
      {
        "Sid" : "DomainCertificate",
        "Effect" : "Allow",
        "Action" : [
          "acm:RequestCertificate",
          "acm:AddTagsToCertificate"
        ],
        "Resource" : ["arn:${data.aws_partition.current.partition}:acm:*:${data.aws_caller_identity.current.account_id}:certificate/*"]
      }
    ]
  })
}

resource "aws_iam_role_policy_attachment" "deployment_policy_4" {
  role       = aws_iam_role.deployment_role.name
  policy_arn = aws_iam_policy.deployment_policy_4.arn
}

resource "aws_iam_policy" "internal_deployment_policy" {
  count = local.internal_deploy_specified ? 1 : 0
  name  = "PantherInternalDeploymentPolicy-${data.aws_region.current.name}"
  policy = jsonencode({
    "Version" : "2012-10-17",
    "Statement" : [
      {
        "Sid" : "PantherCloudTrail",
        "Effect" : "Allow",
        "Action" : ["cloudtrail:*"],
        "Resource" : "arn:${data.aws_partition.current.partition}:cloudtrail:${data.aws_region.current.name}:${data.aws_caller_identity.current.account_id}:trail/panther-account-*"
      }
    ]
  })
}

resource "aws_iam_role_policy_attachment" "internal_deployment_policy" {
  count      = local.internal_deploy_specified ? 1 : 0
  role       = aws_iam_role.deployment_role.name
  policy_arn = aws_iam_policy.internal_deployment_policy[0].arn
}

output "deployment_role_arn" {
  value = aws_iam_role.deployment_role.arn
}