# Copyright (C) 2022 Panther Labs, Inc.
#
# The Panther SaaS is licensed under the terms of the Panther Enterprise Subscription
# Agreement available at https://panther.com/enterprise-subscription-agreement/.
# All intellectual property rights in and to the Panther SaaS, including any and all
# rights to access the Panther SaaS, are governed by the Panther Enterprise Subscription Agreement.

AWSTemplateFormatVersion: 2010-09-09
Description: IAM role for deploying Panther

Parameters:
  DeploymentRoleName:
    Type: String
    Description: Name of the deployment IAM role. If an empty string, the name will be autogenerated
    Default: PantherDeploymentRole
  IdentityAccountId:
    Type: String
    Description: The account ID for the account the deployment role will be assumed from
    Default: ''
  OpsAccountId:
    Type: String
    Description: The second account ID for the account the deployment role will be assumed from.  Used with new deployment tooling
    Default: ''

Conditions:
  AccountSpecified: !Not [!Equals [!Ref IdentityAccountId, '']]
  OpsAccountSpecified: !Not [!Equals [!Ref OpsAccountId, '']]
  RoleNameSpecified: !Not [!Equals [!Ref DeploymentRoleName, '']]

Resources:
  DeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !If [RoleNameSpecified, !Ref DeploymentRoleName, !Ref AWS::NoValue]
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !If
                - AccountSpecified
                - !Sub arn:${AWS::Partition}:iam::${IdentityAccountId}:root
                - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:root
            Action: sts:AssumeRole
            Condition:
              Bool:
                aws:SecureTransport: true

          - Effect: Allow
            Principal:
              AWS: !If
                - OpsAccountSpecified
                - !Sub arn:${AWS::Partition}:iam::${OpsAccountId}:role/PulumiCodeBuild
                - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/PulumiCodeBuild
            Condition:
              Bool:
                aws:SecureTransport: true

          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
            Condition:
              Bool:
                aws:SecureTransport: true
      Description: IAM role for deploying Panther
      Tags:
        - Key: Application
          Value: Panther

  DeploymentPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: PantherInfraManagement
      Roles:
        - !Ref DeploymentRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - acm:*
              - apigateway:*
              - application-autoscaling:*ScalableTarget*
              - application-autoscaling:*ScalingPolicies
              - application-autoscaling:*ScalingPolicy
              - athena:*
              - backup-storage:*
              - backup:*
              - batch:*
              - cloudformation:*
              - cloudfront:UpdateDistribution # needed to apply ACM to APIGW
              - cloudtrail:*
              - cloudwatch:*Alarm*
              - cloudwatch:*Dashboard*
              - cloudwatch:*Metric*
              - cloudwatch:*Tag*
              - cloudwatch:List*
              - codebuild:*
              - cognito-idp:*
              - dynamodb:*Backup*
              - dynamodb:*Stream*
              - dynamodb:*Table*
              - dynamodb:*Tag*
              - dynamodb:*TimeToLive*
              - ec2:*
              - ecs:*Cluster*
              - ecs:*Service*
              - ecs:*Tag*
              - ecs:*Task*
              - elasticfilesystem:*
              - elasticloadbalancing:*
              - es:*
              - events:*
              - glue:*
              - iam:*Policy*
              - iam:*ServerCertificate
              - iam:CreateRole
              - iam:Get*
              - iam:GetRole
              - iam:GetRolePolicy
              - iam:ListAccountAliases
              - iam:ListAttachedRolePolicies
              - iam:ListRolePolicies
              - iam:PutRolePolicy
              - iam:TagRole
              - kinesis:AddTagsToStream
              - kinesis:CreateStream
              - kinesis:DescribeStreamSummary
              - kinesis:EnableEnhancedMonitoring
              - kinesis:IncreaseStreamRetentionPeriod
              - kinesis:ListTagsForStream
              - kms:*
              - lambda:*EventSourceMapping
              - lambda:*LayerVersion*
              - lambda:List*
              - logs:*
              - organizations:DescribeOrganization
              - s3:*AccelerateConfiguration
              - s3:*AccountPublicAccessBlock
              - s3:*Bucket*
              - s3:*EncryptionConfiguration
              - s3:*InventoryConfiguration
              - s3:*LifecycleConfiguration
              - s3:*MetricsConfiguration
              - s3:*ReplicationConfiguration
              - s3:CreateAccessPoint
              - s3:PutObject*
              - secretsmanager:CancelRotateSecret
              - secretsmanager:DescribeSecret
              - secretsmanager:RotateSecret
              - servicequotas:*
              - sns:*
              - sqs:*Permission*
              - sqs:*Queue*
              - sqs:SendMessage
              - states:*
              - vpc:*
              - wafv2:*
              - wafv2:CreateRuleGroup
              - wafv2:CreateWebACL
              - wafv2:GetRuleGroup
              - wafv2:ListTagsForResource
              - wafv2:TagResource
              - wafv2:UpdateRuleGroup
            Resource: '*'
          - Effect: Allow
            Action: firehose:*
            Resource: !Sub arn:${AWS::Partition}:firehose:*:${AWS::AccountId}:deliverystream/*
          - Effect: Allow
            Action:
              - dynamodb:Scan
              - dynamodb:Get*
            Resource:
              - !Sub arn:${AWS::Partition}:dynamodb:*:${AWS::AccountId}:table/panther-analysis
              - !Sub arn:${AWS::Partition}:dynamodb:*:${AWS::AccountId}:table/panther-organization
          - Effect: Allow
            Action:
              - iam:*InstanceProfile*
              - iam:AttachRolePolicy
              - iam:CreateRole
              - iam:DeleteRole
              - iam:DeleteRolePolicy
              - iam:DetachRolePolicy
              - iam:Get*
              - iam:List*
              - iam:PassRole
              - iam:PutRolePolicy
              - iam:TagRole
              - iam:UpdateAssumeRolePolicy
              - iam:UpdateRole
              - iam:UpdateRoleDescription
              - iam:UntagRole
            Resource:
              - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/dynamo-scaling-*
              - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/firehose-http-input-data-bucket-*
              - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/panther-*
              - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/Panther*
              - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/pip-layer-builder-codebuild-*
              - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:instance-profile/Panther*
              - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/datadog*
              - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/Datadog*
          - Effect: Allow
            Action:
              - iam:*
            Resource:
              - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/aws-service-role/batch.amazonaws.com/AWSServiceRoleForBatch
              - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/aws-service-role/cloudtrail.amazonaws.com/AWSServiceRoleForCloudTrail
              - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable
              - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/aws-service-role/ecs.amazonaws.com/AWSServiceRoleForECS
              - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/aws-service-role/elasticloadbalancing.amazonaws.com/AWSServiceRoleForElasticLoadBalancing
              - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/aws-service-role/elasticfilesystem.amazonaws.com/AWSServiceRoleForAmazonElasticFileSystem
              - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/aws-service-role/guardduty.amazonaws.com/AWSServiceRoleForAmazonGuardDuty
              - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/aws-service-role/opensearchservice.amazonaws.com/AWSServiceRoleForAmazonOpenSearchService
              - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/aws-service-role/ops.apigateway.amazonaws.com/AWSServiceRoleForAPIGateway
              - !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/aws-service-role/servicequotas.amazonaws.com/AWSServiceRoleForServiceQuotas
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Resource: arn:aws:iam::*:role/PulumiRoute53
          - Effect: Allow
            Action: lambda:*
            Resource:
              - !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:event-source-mapping:*
              - !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:panther-*
              - !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:layer:panther-*
              - !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:datadog-*
          - Effect: Allow
            Action: lambda:invokeFunction
            Resource: !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:panther-source-api
          - Effect: Allow
            Action: lambda:GetLayerVersion
            Resource:
              - !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:464622532012:layer:Datadog-Extension*
              - !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:464622532012:layer:Datadog-Python*
              - !Sub arn:${AWS::Partition}:lambda:${AWS::Region}:580247275435:layer:LambdaInsightsExtension*
          - Effect: Allow
            Action: s3:*
            Resource:
              - !Sub arn:${AWS::Partition}:s3:::panther*-analysisversions-*
              - !Sub arn:${AWS::Partition}:s3:::analysis-versions-*
          - Effect: Deny
            Action: elasticloadbalancing:DeleteLoadBalancer
            NotResource:
              - !Sub arn:${AWS::Partition}:elasticloadbalancing:${AWS::Region}:${AWS::AccountId}:loadbalancer/app/http-ingest-alb*
          - Effect: Deny
            Action: dynamodb:DeleteTable
            NotResource:
              - !Sub arn:${AWS::Partition}:dynamodb:*:${AWS::AccountId}:table/*alerts-risk-factors
              - !Sub arn:${AWS::Partition}:dynamodb:*:${AWS::AccountId}:table/*alerts-indicators
              - !Sub arn:${AWS::Partition}:dynamodb:*:${AWS::AccountId}:table/*alert-search-rehydrate-jobs
          - Effect: Deny
            Action:
              - cognito-idp:DeleteUserPool*
              - dynamodb:DeleteBackup
              - dynamodb:DeleteItem
              - dynamodb:DeleteTableReplica
              - kms:DeleteAlias
              - kms:DeleteCustomKeyStore
              - kms:DeleteImportedKeyMaterial
              - kms:ScheduleKeyDeletion
              - s3:DeleteBucket
              - sns:DeleteTopic
            Resource: '*'
Outputs:
  DeploymentRoleArn:
    Value: !GetAtt DeploymentRole.Arn
